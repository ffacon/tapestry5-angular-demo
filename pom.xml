<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>dev.openshift.tapestry</groupId>
	<artifactId>tapestry5-angular-openshift</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>	
	<name>tapestry5 angular demo in Tapestry 5</name>
	
	<properties>
		<tapestry-release-version>5.3.6</tapestry-release-version>
		<hibernate-framework-version>3.6.10.Final</hibernate-framework-version>
		<slf4j-version>1.7.2</slf4j-version>
		<servlet-api-release-version>2.5</servlet-api-release-version>
		 <!-- Explicitly declaring the source encoding eliminates the following
message: -->
      <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered
resources, i.e. build is platform dependent! -->
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
					<archive>
						<manifestEntries>
							<Release-Version>${project.version}</Release-Version>
							<Implementation-Title>${project.artifactId}</Implementation-Title>
							<Implementation-Vendor>francois facon</Implementation-Vendor>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<!-- The JBoss AS plugin deploys your war to a local JBoss AS container -->
         <!-- To use, run: mvn package jboss-as:deploy -->
         <plugin>
            <groupId>org.jboss.as.plugins</groupId>
            <artifactId>jboss-as-maven-plugin</artifactId>
            <version>7.1.0.Final</version>
         </plugin>
		</plugins>
	</build>
	
	<dependencies>
		<!-- TAPESTRY LIBS -->
		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-core</artifactId>
			<version>${tapestry-release-version}</version>
		</dependency>

		<!-- Logging libs -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j-version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j-version}</version>
		</dependency>
		

		<!-- Testing with JUnit not the default testng -->
		<dependency>
			<groupId>org.apache.tapestry</groupId>
			<artifactId>tapestry-test</artifactId>
			<version>${tapestry-release-version}</version>
			<scope>test</scope>
			<optional>true</optional>
			<exclusions>
				<exclusion>
					<groupId>org.testng</groupId>
					<artifactId>testng</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.10</version>
			<optional>true</optional>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet-api-release-version}</version>
		</dependency>

		<dependency>
			<groupId>org.got5</groupId>
        	<artifactId>tapestry5-jquery</artifactId>
            <version>3.3.3</version>
		</dependency>
		

	</dependencies>
	
   <profiles>

      <profile>
         <!-- The default profile skips all tests, though you can tune it 
            to run just unit tests based on a custom pattern -->
         <!-- Seperate profiles are provided for running all tests, including 
            Arquillian tests that execute in the specified container -->
         <id>default</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <version>2.4.3</version>
                  <configuration>
                     <skip>false</skip>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

	  <profile>
         <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
         <!-- Use this profile for any OpenShift specific customization your app will need. -->
         <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
         <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
         <id>openshift</id>
         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-war-plugin</artifactId>
                  <version>2.1.1</version>
                  <configuration>
                     <outputDirectory>deployments</outputDirectory>
                     <warName>ROOT</warName>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

   </profiles>
   
   <repositories>
		<repository>
			<id>devlab722-repo</id>
			<url>http://nexus.devlab722.net/nexus/content/repositories/releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>devlab722-snapshot-repo</id>
			<url>http://nexus.devlab722.net/nexus/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		
		<repository>
			<id>pullrequest-snapshot-repo</id>
			<url>http://nexus.pullrequest.org/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		

		<repository>
			<id>apache-snapshots</id>
			<url>http://repository.apache.org/snapshots</url>
		</repository>

		<!-- TODO: remove when 5.3 hits central -->
		<repository>
            <id>apache-staging</id>
            <url>https://repository.apache.org/content/groups/staging/</url>
        </repository>
		<repository>
			<id>apache-snapshots2</id>
			<url>https://repository.apache.org/content/groups/public</url>
		</repository>

		<repository>
			<id>codehaus.snapshots</id>
			<url>http://snapshots.repository.codehaus.org</url>
		</repository>
		<repository>
			<id>OpenQA_Release</id>
			<name>OpenQA Release Repository</name>
			<url>http://archiva.openqa.org/repository/releases/</url>
		</repository>
	</repositories>
   
</project>